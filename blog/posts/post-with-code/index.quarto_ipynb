{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"Primer trabajo: Optimización heurística\"\n",
        "author:\n",
        "  - name: \"Catalina Restrepo Salgado\"\n",
        "  - name: \"Julián Castaño Pineda\"\n",
        "  - name: \"Tomás Rodríguez Taborda\"\n",
        "  - name: \"Luis Andrés Altamar Romero\"\n",
        "date: \"2024-11-15\"\n",
        "categories: [optimización]\n",
        "image: \"image.jpg\"\n",
        "---"
      ],
      "id": "e00291f0"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "from mpl_toolkits.mplot3d import Axes3D"
      ],
      "id": "0df82314",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "# Primera parte: Optimización Numérica\n",
        "\n",
        "El objetivo de esta sección es evaluar diversos métodos de optimización aplicados a varias funciones, con el fin de medir su rendimiento. En particular, se utilizarán las funciones de Rosenbrock, Schwefel, Griewank, Goldstein-Price y la función de las seis jorobas de camello. Estas funciones serán optimizadas mediante el método del gradiente descendente y tres algoritmos heurísticos: Algoritmos Evolutivos, Optimización por Enjambre de Partículas y Evolución Diferencial.\n",
        "\n",
        "Al final, se comentará sobre los aportes de los métodos de descenso por gradiente y los métodos heurísticos, considerando el valor final de la función objetivo y el número de evaluaciones de la función objetivo, en un entorno de simulación con varios parámetros y condiciones para garantizar conclusiones significativas.\n",
        "\n",
        "## Funciones a optimizar\n"
      ],
      "id": "335932dc"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "def plot_function(f, x1_range, x2_range, title=\"Function Plot\"):\n",
        "    x1 = np.linspace(x1_range[0], x1_range[1], 400)\n",
        "    x2 = np.linspace(x2_range[0], x2_range[1], 400)\n",
        "    X1, X2 = np.meshgrid(x1, x2)\n",
        "    Z = f(X1, X2)\n",
        "\n",
        "    fig = plt.figure(figsize=(14, 6))\n",
        "\n",
        "    # 3D plot\n",
        "    ax1 = fig.add_subplot(121, projection='3d')\n",
        "    ax1.plot_surface(X1, X2, Z, cmap='viridis')\n",
        "    ax1.set_title(f'3D Plot of {title}')\n",
        "    ax1.set_xlabel('X1')\n",
        "    ax1.set_ylabel('X2')\n",
        "    ax1.set_zlabel('Z')\n",
        "\n",
        "    # Contour plot\n",
        "    ax2 = fig.add_subplot(122)\n",
        "    contour = ax2.contour(X1, X2, Z, cmap='viridis')\n",
        "    ax2.set_title(f'Contour Plot of {title}')\n",
        "    ax2.set_xlabel('X1')\n",
        "    ax2.set_ylabel('X2')\n",
        "    fig.colorbar(contour, ax=ax2)\n",
        "\n",
        "    plt.show()\n",
        "\n",
        "# Ejemplo de uso con la función de Rosenbrock\n",
        "def rosenbrock(x1, x2):\n",
        "    return (1 - x1)**2 + 100 * (x2 - x1**2)**2\n",
        "\n",
        "plot_function(rosenbrock, x1_range=(-2, 2), x2_range=(-1, 3), title=\"Rosenbrock Function\")"
      ],
      "id": "e323d6c6",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "::: panel-tabset\n",
        "### Función de Rosenbrock\n",
        " $$ f(x_1, x_2) = (a - x_1)^2 + b(x_2 - x_1^2)^2 $$\n",
        "\n",
        "\n",
        "### Función de Schwefel\n",
        "$$ f(x_1,x_2) = 418.9829n - \\sum_{i=1}^{2} x_i \\sin(\\sqrt{|x_i|}) $$\n",
        "\n",
        "### Función de Griewank\n",
        "$$ f(x_1,x_2) = 1 + \\frac{1}{4000} \\sum_{i=1}^{2} x_i^2 - \\prod_{i=1}^{2} \\cos\\left(\\frac{x_i}{\\sqrt{i}}\\right) $$\n",
        "\n",
        "### Función Goldstein-Price\n",
        "\n",
        "$$\n",
        "\\begin{align}\n",
        "f(x_1, x_2) = & \\left[1 + (x_1 + x_2 + 1)^2 (19 - 14x_1 + 3x_1^2 - 14x_2 + 6x_1x_2 + 3x_2^2)\\right] \\\\\n",
        "         & \\left[30 + (2x_1 - 3x_2)^2 (18 - 32x_1 + 12x_1^2 + 48x_2 - 36x_1x_2 + 27x_2^2)\\right]\n",
        "\\end{align}\n",
        "$$\n",
        "\n",
        "### Función de las seis jorobas de camello\n",
        " $$ f(x_1, x_2) = \\left(4 - 2.1x_1^2 + \\frac{x_1^4}{3}\\right)x_1^2 + x_1x_2 + \\left(-4 + 4x_2^2\\right)x_2^2 $$\n",
        "\n",
        ":::\n",
        "\n",
        "## Proceso de optimización\n",
        "\n",
        "### Optimización por descenso del gradiente \n",
        "\n",
        "::: panel-tabset\n",
        "#### Función de Rosenbrock\n",
        " $$ f(x_1, x_2) = (a - x_1)^2 + b(x_2 - x_1^2)^2 $$\n",
        "\n",
        "#### Función de Schwefel\n",
        "$$ f(x_1,x_2) = 418.9829n - \\sum_{i=1}^{2} x_i \\sin(\\sqrt{|x_i|}) $$\n",
        "\n",
        "#### Función de Griewank\n",
        "$$ f(x_1,x_2) = 1 + \\frac{1}{4000} \\sum_{i=1}^{2} x_i^2 - \\prod_{i=1}^{2} \\cos\\left(\\frac{x_i}{\\sqrt{i}}\\right) $$\n",
        "\n",
        "#### Función Goldstein-Price\n",
        "\n",
        "$$\n",
        "\\begin{align}\n",
        "f(x_1, x_2) = & \\left[1 + (x_1 + x_2 + 1)^2 (19 - 14x_1 + 3x_1^2 - 14x_2 + 6x_1x_2 + 3x_2^2)\\right] \\\\\n",
        "         & \\left[30 + (2x_1 - 3x_2)^2 (18 - 32x_1 + 12x_1^2 + 48x_2 - 36x_1x_2 + 27x_2^2)\\right]\n",
        "\\end{align}\n",
        "$$\n",
        "\n",
        "#### Función de las seis jorobas de camello\n",
        " $$ f(x_1, x_2) = \\left(4 - 2.1x_1^2 + \\frac{x_1^4}{3}\\right)x_1^2 + x_1x_2 + \\left(-4 + 4x_2^2\\right)x_2^2 $$\n",
        " \n",
        ":::\n",
        "\n",
        "\n",
        "### Tareas:\n",
        "1. **Escoja dos funciones de prueba.**\n",
        "2. **Optimización con método de descenso por gradiente:**\n",
        "   - Optimice las funciones seleccionadas en **dos y tres dimensiones** usando un **método de descenso por gradiente** con condición inicial aleatoria.\n",
        "3. **Optimización con métodos heurísticos:**\n",
        "   - Optimice las funciones seleccionadas en **dos y tres dimensiones** usando:\n",
        "     - Algoritmos evolutivos.\n",
        "     - Optimización de partículas.\n",
        "     - Evolución diferencial.\n",
        "4. **Representación visual:**\n",
        "   - Cree un **GIF animado** o un **video** que muestre el proceso de optimización usando:\n",
        "     - **Descenso por gradiente**.\n",
        "     - **Métodos heurísticos**.\n",
        "\n",
        "### Discusión:\n",
        "Reflexione sobre los siguientes puntos:\n",
        "- ¿Qué aportaron los métodos de **descenso por gradiente** y qué aportaron los **métodos heurísticos**?\n",
        "  - Para responder a esta pregunta, considere:\n",
        "    - El **valor final** de la función objetivo.\n",
        "    - El **número de evaluaciones** de la función objetivo.\n",
        "  - Es posible que se requiera realizar **varias corridas** de los algoritmos para obtener conclusiones significativas.\n",
        "\n",
        "\n",
        "# Parte 2: Optimización Combinatoria\n",
        "\n",
        "## Problema del Viajero:\n",
        "Un vendedor debe realizar un recorrido por **todas las capitales** de los **32 estados** de los **Estados Unidos Mexicanos**.\n",
        "\n",
        "### Tareas:\n",
        "1. **Optimización con métodos metaheurísticos:**\n",
        "   - Utilice **colonias de hormigas** para encontrar el orden óptimo del recorrido.\n",
        "   - Utilice **algoritmos genéticos** para encontrar el orden óptimo del recorrido.\n",
        "2. **Costo del recorrido:**\n",
        "   - El costo de desplazamiento entre ciudades se calcula como la suma de:\n",
        "     - El valor de la **hora del vendedor** (este es un parámetro que debe estudiarse).\n",
        "     - El **costo de los peajes**.\n",
        "     - El **costo del combustible**.\n",
        "   - Cada equipo debe definir el **vehículo** que utilizará el vendedor para realizar el recorrido y, con base en esta elección, **calcular el costo del combustible**.\n",
        "\n",
        "### Representación Visual:\n",
        "- Cree un **GIF animado** o un **video** que muestre cómo se comporta la **mejor solución** encontrada, usando un **gráfico del recorrido** en el mapa de México.\n",
        "\n",
        "---\n",
        "\n",
        "### Discusión:\n",
        "Reflexione sobre:\n",
        "- Los resultados obtenidos con las **colonias de hormigas** y los **algoritmos genéticos**.\n",
        "- Comparación de costos y tiempo de ejecución."
      ],
      "id": "462b41bd"
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": ".venv",
      "language": "python",
      "display_name": "env-ipynb",
      "path": "C:\\Users\\julia\\AppData\\Roaming\\jupyter\\kernels\\.venv"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}